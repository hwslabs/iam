<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist></Blacklist>
  <Whitelist>
    <ID>EmptyDefaultConstructor:Paths.kt$Paths.GetToken$()</ID>
    <ID>EnumNaming:CreateUserRequest.kt$CreateUserRequest.Status.active$active</ID>
    <ID>EnumNaming:CreateUserRequest.kt$CreateUserRequest.Status.inactive$inactive</ID>
    <ID>EnumNaming:CreateUserRequest.kt$CreateUserRequest.UserType.admin$admin</ID>
    <ID>EnumNaming:CreateUserRequest.kt$CreateUserRequest.UserType.apiOnly$apiOnly</ID>
    <ID>EnumNaming:CreateUserRequest.kt$CreateUserRequest.UserType.normal$normal</ID>
    <ID>EnumNaming:CreateUserRequest.kt$CreateUserRequest.UserType.system$system</ID>
    <ID>EnumNaming:Credential.kt$Credential.Status.active$active</ID>
    <ID>EnumNaming:Credential.kt$Credential.Status.inactive$inactive</ID>
    <ID>EnumNaming:CredentialWithoutSecret.kt$CredentialWithoutSecret.Status.active$active</ID>
    <ID>EnumNaming:CredentialWithoutSecret.kt$CredentialWithoutSecret.Status.inactive$inactive</ID>
    <ID>EnumNaming:PolicyStatement.kt$PolicyStatement.Effect.allow$allow</ID>
    <ID>EnumNaming:PolicyStatement.kt$PolicyStatement.Effect.deny$deny</ID>
    <ID>EnumNaming:UpdateCredentialRequest.kt$UpdateCredentialRequest.Status.active$active</ID>
    <ID>EnumNaming:UpdateCredentialRequest.kt$UpdateCredentialRequest.Status.inactive$inactive</ID>
    <ID>EnumNaming:UpdateUserRequest.kt$UpdateUserRequest.Status.active$active</ID>
    <ID>EnumNaming:UpdateUserRequest.kt$UpdateUserRequest.Status.deleted$deleted</ID>
    <ID>EnumNaming:UpdateUserRequest.kt$UpdateUserRequest.Status.inactive$inactive</ID>
    <ID>EnumNaming:User.kt$User.Status.active$active</ID>
    <ID>EnumNaming:User.kt$User.Status.deleted$deleted</ID>
    <ID>EnumNaming:User.kt$User.Status.inactive$inactive</ID>
    <ID>EnumNaming:User.kt$User.UserType.admin$admin</ID>
    <ID>EnumNaming:User.kt$User.UserType.apiOnly$apiOnly</ID>
    <ID>EnumNaming:User.kt$User.UserType.normal$normal</ID>
    <ID>EnumNaming:User.kt$User.UserType.system$system</ID>
    <ID>ForbiddenComment:ApiKeyAuth.kt$// TODO: Verify correct response structure here.</ID>
    <ID>ForbiddenComment:Application.kt$// TODO: Add support for Bearer token authentication</ID>
    <ID>ForbiddenComment:Application.kt$// TODO: Switch to kotlinx.serialization</ID>
    <ID>ForbiddenComment:DatabaseFactory.kt$DatabaseFactory$// TODO: Read from config file instead of hardcoding</ID>
    <ID>FunctionNaming:Configuration.kt$ internal fun ApplicationCompressionConfiguration(): Compression.Configuration.() -&gt; Unit</ID>
    <ID>FunctionNaming:Configuration.kt$ internal fun ApplicationHstsConfiguration(): HSTS.Configuration.() -&gt; Unit</ID>
    <ID>MagicNumber:Application.kt$10</ID>
    <ID>MagicNumber:Application.kt$8081</ID>
    <ID>MagicNumber:Configuration.kt$10.0</ID>
    <ID>MagicNumber:Configuration.kt$1024</ID>
    <ID>MagicNumber:Configuration.kt$365</ID>
    <ID>MagicNumber:Configuration.kt$4</ID>
    <ID>MagicNumber:Configuration.kt$60</ID>
    <ID>MagicNumber:DatabaseFactory.kt$DatabaseFactory$3</ID>
    <ID>MatchingDeclarationName:Inline_response_200.kt$InlineResponse200</ID>
    <ID>MatchingDeclarationName:Inline_response_200_1.kt$InlineResponse2001</ID>
    <ID>MaxLineLength:ApiKeyAuth.kt$call.respond(UnauthorizedResponse(HttpAuthHeader.Parameterized("API_KEY", mapOf("key" to apiKeyName), HeaderValueEncoding.QUOTED_ALWAYS)))</ID>
    <ID>MaxLineLength:ApiKeyAuth.kt$fun ApplicationRequest.apiKeyAuthenticationCredentials(apiKeyName: String, apiKeyLocation: ApiKeyLocation): ApiKeyCredential?</ID>
    <ID>MaxLineLength:Paths.kt$inline</ID>
    <ID>SpreadOperator:OrganizationRepo.kt$OrganizationRepo$(com.hypto.iam.server.db.tables.Organizations.ORGANIZATIONS.ADMIN_USER, *values)</ID>
    <ID>SpreadOperator:OrganizationRepo.kt$OrganizationRepo$(com.hypto.iam.server.db.tables.Organizations.ORGANIZATIONS.NAME, *values)</ID>
    <ID>SpreadOperator:UserRepo.kt$UserRepo$(com.hypto.iam.server.db.tables.Users.USERS.ID, *values)</ID>
    <ID>SpreadOperator:UserRepo.kt$UserRepo$(com.hypto.iam.server.db.tables.Users.USERS.ORGANIZATION_ID, *values)</ID>
  </Whitelist>
</SmellBaseline>
