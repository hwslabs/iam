openapi: 3.0.1
info:
  title: Hypto IAM
  version: 1.0.0
  description: APIs for Hypto IAM Service.
  contact:
    email: engineering@hypto.in
    name: Engineering
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://{environment}.{region}.hypto.com/v1
    variables:
      environment:
        default: sandbox-iam
        enum:
          - sandbox-iam
          - iam
      region:
        default: us
        enum:
          - us
          - eu
          - apac

tags:
  - name: "Organization Management"
    description: "APIs for managing an Organization"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/OrganizationManagementApi.md"
  - name: "User Management"
    description: "APIs for managing users inside Organization"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserManagementApi.md"
  - name: "Policy Management"
    description: "APIs for managing policies"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/PolicyManagementApi.md"
  - name: "User Policy Management"
    description: "APIs for managing user policies"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserPolicyManagementApi.md"
  - name: "User Credential Management"
    description: "APIs for managing the credentials of user"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserCredentialManagementApi.md"
  - name: "Resource Management"
    description: "APIs for managing the resources inside an organization"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/ResourceManagementApi.md"
  - name: "Resource Action Management"
    description: "APIs for managing the actions for a resource inside an organization"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/ResourceActionManagementApi.md"
  - name: "User Authorization"
    description: "APIs used at runtime for validation"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserAuthorizationApi.md"
  - name: "Key Management"
    description: "APIs for fetching keys"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/KeyManagementApi.md"
  - name: "User Authentication"
    description: "APIs used by the for authentication"
    externalDocs:
      description: "docs"
      url: "http://hypto.com/docs/iam/SignInApi"
  - name: "User Verification"
    description: "APIs for verifying emails"
    externalDocs:
      description: "docs"
      url: "https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/PasscodeManagement.md"
  - name: "Auth Provider"
    description: "APIs for auth providers"

paths:
  # organization
  /organizations:
    post:
      tags:
        - Organization Management
      summary: Creates an organization.
      description: Organization is the top level entity. All resources (like user, actions, policies) are created and managed under an organization. This is a privileged api and only internal applications has access to create an Organization.
      operationId: createOrganization
      requestBody:
        $ref: '#/components/requestBodies/CreateOrganizationRequest'

      responses:
        '201':
          $ref: '#/components/responses/CreateOrganizationResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - apiKeyAuth: []

  /organizations/{organization_id}:
    get:
      tags:
        - Organization Management
      summary: Get an organization
      description: Get an organization and the metadata for the given organization.
      operationId: getOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/OrganizationResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - Organization Management
      summary: Update an organization
      description: Update an organization
      operationId: updateOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrganizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrganizationResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - Organization Management
      summary: Delete an organization
      description: Delete an organization. This is a privileged api and only internal application will have access to delete organization.
      operationId: deleteOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - apiKeyAuth: []

  # sub organizations
  /organizations/{organization_id}/sub_organizations:
    post:
      tags:
        - Sub Organization Management
      summary: Create a sub organization under an organization. Sub organization provides a way to create a hierarchy of organizations to easily manage resources at each levels.
      description: Create a sub organization under an organization.
      operationId: createSubOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreateSubOrganizationRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateSubOrganizationResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    get:
      tags:
        - Sub Organization Management
      summary: List sub organizations under an organization.
      description: List all sub organizations under an organization.
      operationId: listSubOrganizations
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/ListSubOrganizationsResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}:
    get:
      tags:
        - Sub Organization Management
      summary: Get a sub organization
      description: Get a sub organization and the metadata for the given sub organization.
      operationId: getSubOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      responses:
        '200':
          $ref: '#/components/responses/SubOrganizationResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - Sub Organization Management
      summary: Update a sub organization
      description: Update a sub organization
      operationId: updateSubOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSubOrganizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/SubOrganizationResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
          - Sub Organization Management
      summary: Delete a sub organization
      description: Delete a sub organization. This is a privileged api and only internal application will have access to delete sub organization.
      operationId: deleteSubOrganization
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  # user
  /organizations/{organization_id}/users:
    post:
      tags:
        - User Management
      summary: Create a user
      description: User is an entity which represent a person who is part of the organization or account. This user entity can be created either through user name, password or the user can be federated through an identity provider like Google, Facebook or any SAML 2.0, OIDC identity provider. This is a sign-up api to create a new user in an organization.
      operationId: createUser
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreateUserRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    get:
      tags:
        - User Management
      summary: List users
      description: List users associated with the organization. This is a pagniated api which returns the list of users with a next page token.
      operationId: listUsers
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
      responses:
        '200':
          $ref: '#/components/responses/UserPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users:
    post:
      tags:
        - User Management
      summary: Create a user
      description: User is an entity which represent a person who is part of the organization or account. This user entity can be created either through user name, password or the user can be federated through an identity provider like Google, Facebook or any SAML 2.0, OIDC identity provider. This is a sign-up api to create a new user in an organization.
      operationId: createSubOrganizationUser
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/CreateUserRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    get:
      tags:
        - User Management
      summary: List users
      description: List users associated with the organization. This is a pagniated api which returns the list of users with a next page token.
      operationId: listSubOrganizationUsers
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
      responses:
        '200':
          $ref: '#/components/responses/UserPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/users/{user_name}:
    get:
      tags:
        - User Management
      summary: Gets a user entity associated with the organization
      description: Get a User
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/GetUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - User Management
      summary: Update a User
      description: Update a User
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUserRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - User Management
      summary: Delete a User
      description: Delete a User
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}:
    get:
      tags:
        - User Management
      summary: Gets a user entity associated with the organization
      description: Get a User
      operationId: getSubOrganizationUser
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      responses:
        '200':
          $ref: '#/components/responses/GetUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - User Management
      summary: Update a User
      description: Update a User
      operationId: updateSubOrganizationUser
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUserRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - User Management
      summary: Delete a User
      description: Delete a User
      operationId: deleteSubOrganizationUser
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/users/{user_name}/change_password:
    post:
      tags:
        - User Management
      summary: Change password for a user
      description: Change password for a user
      operationId: changePassword
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/ChangeUserPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/change_password:
    post:
      tags:
        - User Management
      summary: Change password for a user
      description: Change password for a user
      operationId: changeSubOrganizationPassword
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/ChangeUserPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/users/{user_name}/create_password:
    post:
      tags:
        - User Management
      summary: Create password for a user
      description: Create password for a user
      operationId: createPassword
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreateUserPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/create_password:
    post:
      tags:
        - User Management
      summary: Create password for a user
      description: Create password for a user
      operationId: createSubOrganizationPassword
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/CreateUserPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/users/resetPassword:
    post:
      tags:
        - User Management
      summary: Reset Password
      description: Reset Password
      operationId: resetPassword
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/ResetPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - apiKeyAuth: []


  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/resetPassword:
    post:
      tags:
        - User Management
      summary: Reset Password
      description: Reset Password
      operationId: resetSubOrganizationPassword
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/ResetPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - apiKeyAuth: [ ]

  /organizations/{organization_id}/users/{user_name}/policies:
    get:
      tags:
        - User Policy Management
      summary: List all policies associated with user
      description: List all policies associated with user
      operationId: getUserPolicies
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          $ref: '#/components/responses/PolicyPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/policies:
    get:
      tags:
        - User Policy Management
      summary: List all policies associated with user
      description: List all policies associated with user
      operationId: getSubOrganizationUserPolicies
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          $ref: '#/components/responses/PolicyPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /organizations/{organization_id}/users/{user_name}/attach_policies:
    patch:
      tags:
        - User Policy Management
      summary: Attach policies to user
      description: Attach policies to user
      operationId: attachPolicies
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/PolicyAssociationRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/attach_policies:
    patch:
      tags:
        - User Policy Management
      summary: Attach policies to user
      description: Attach policies to user
      operationId: attachSubOrganizationPolicies
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/PolicyAssociationRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /organizations/{organization_id}/users/{user_name}/detach_policies:
    patch:
      tags:
        - User Policy Management
      summary: Detach policies from user
      description: Detach policies from user
      operationId: detachPolicies
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/PolicyAssociationRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/detach_policies:
    patch:
      tags:
        - User Policy Management
      summary: Detach policies from user
      description: Detach policies from user
      operationId: detachSubOrganizationPolicies
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/PolicyAssociationRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /organizations/{organization_id}/users/{user_name}/auth_methods:
    get:
      tags:
        - User Authorization Methods Management
      summary: Gets authorization methods of a user entity associated with the organization
      description: Get authorization methods of a User
      operationId: getUserAuthMethods
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/UserAuthMethodsResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      tags:
        - User Authorization Methods Management
      summary: Add authorization method to a user
      description: Add authorization method to a user
      operationId: addUserAuthMethod
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/AddUserAuthMethodRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  # credential
  /organizations/{organization_id}/users/{user_name}/credentials:
    post:
      tags:
        - User Credential Management
      summary: Create a new credential for a user
      description: Create a new credential for a user. This API returns the credential's secret key, which will be available only in the response of this API.
      operationId: createCredential
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreateCredentialRequest'

      responses:
        '201':
          $ref: '#/components/responses/CreateCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - User Credential Management
      summary: List all credentials for a user
      description: List all credentials for a user
      operationId: listCredentials
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/ListCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/credentials:
    post:
      tags:
        - User Credential Management
      summary: Create a new credential for a user
      description: Create a new credential for a user. This API returns the credential's secret key, which will be available only in the response of this API.
      operationId: createSubOrganizationCredential
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      requestBody:
        $ref: '#/components/requestBodies/CreateCredentialRequest'

      responses:
        '201':
          $ref: '#/components/responses/CreateCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - User Credential Management
      summary: List all credentials for a user
      description: List all credentials for a user
      operationId: listSubOrganizationCredentials
      parameters:
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      responses:
        '200':
          $ref: '#/components/responses/ListCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /organizations/{organization_id}/users/{user_name}/credentials/{credential_id}:
    get:
      tags:
        - User Credential Management
      summary: Gets credential for the user
      description: Gets credential for the user, given the credential id
      operationId: getCredential
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/credential_id'
      responses:
        '200':
          $ref: '#/components/responses/GetCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - User Credential Management
      summary: Update the status of credential
      description: Update the status of credential to ACTIVE/INACTIVE. Credentials which are marked INACTIVE cannot be used to fetch short-term tokens.
      operationId: updateCredential
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/credential_id'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCredentialRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - User Credential Management
      summary: Delete a credential
      description: Delete a credential associated with the user
      operationId: deleteCredential
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/credential_id'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/users/{user_name}/credentials/{credential_id}:
    get:
      tags:
        - User Credential Management
      summary: Gets credential for the user
      description: Gets credential for the user, given the credential id
      operationId: getSubOrganizationCredential
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/credential_id'
      responses:
        '200':
          $ref: '#/components/responses/GetCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - User Credential Management
      summary: Update the status of credential
      description: Update the status of credential to ACTIVE/INACTIVE. Credentials which are marked INACTIVE cannot be used to fetch short-term tokens.
      operationId: updateSubOrganizationCredential
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/credential_id'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCredentialRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - User Credential Management
      summary: Delete a credential
      description: Delete a credential associated with the user
      operationId: deleteSubOrganizationCredential
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
        - $ref: '#/components/parameters/user_name'
        - $ref: '#/components/parameters/credential_id'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  # resource
  /organizations/{organization_id}/resources:
    post:
      tags:
        - Resource Management
      summary: Create a resource name in an organization.
      description: Creates a resource name. Access policies can be associated with the instances of these resources. ex - \"Wallet\" is a resource name in the organization org - \"Org#1\" and \"wallet#1\" is the instance of the resource \"Wallet\". Policies on which user to access the wallet#1 can be created by the user having privilege to access the resource.
      operationId: createResource
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceRequest'
      responses:
        '201':
          $ref: '#/components/responses/ResourceResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    get:
      tags:
        - Resource Management
      summary: List Resources
      description: List all the resource names in an organization.
      operationId: listResources
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          $ref: '#/components/responses/ResourcePaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/resources/{resource_name}:
    get:
      tags:
        - Resource Management
      summary: Get the resource details
      description: Gets the resource details associated with the organization
      operationId: getResource
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
      responses:
        '200':
          $ref: '#/components/responses/ResourceResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - Resource Management
      summary: Update a resource
      description: Update resource name of the organization
      operationId: updateResource
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
      requestBody:
        $ref: '#/components/requestBodies/UpdateResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResourceResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - Resource Management
      summary: Delete a resource
      description: Delete a resource
      operationId: deleteResource
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  # action
  /organizations/{organization_id}/resources/{resource_name}/actions:
    post:
      tags:
        - Resource Action Management
      summary: Create an action
      description: Create an action
      operationId: createAction
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
      requestBody:
        $ref: '#/components/requestBodies/CreateActionRequest'

      responses:
        '201':
          $ref: '#/components/responses/ActionResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    get:
      tags:
        - Resource Action Management
      summary: List actions
      description: List actions
      operationId: listActions
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          $ref: '#/components/responses/ActionPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /organizations/{organization_id}/resources/{resource_name}/actions/{action_name}:
    get:
      tags:
        - Resource Action Management
      summary: Get an action
      description: Get an action
      operationId: getAction
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
        - $ref: '#/components/parameters/action_name'
      responses:
        '200':
          $ref: '#/components/responses/ActionResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - Resource Action Management
      summary: Update an action
      description: Update an action
      operationId: updateAction
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
        - $ref: '#/components/parameters/action_name'
      requestBody:
        $ref: '#/components/requestBodies/UpdateActionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ActionResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - Resource Action Management
      summary: Delete an action
      description: Delete an action
      operationId: deleteAction
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/resource_name'
        - $ref: '#/components/parameters/action_name'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  # policy
  /organizations/{organization_id}/policy_from_template:
    post:
      tags:
        - Policy Management
      summary: Create a policy from template
      description: Create a policy from template
      operationId: createPolicyFromTemplate
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreatePolicyFromTemplateRequest'
      responses:
        '201':
          $ref: '#/components/responses/PolicyResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/policies:
    post:
      tags:
        - Policy Management
      summary: Create a policy
      description: Create a policy
      operationId: createPolicy
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/CreatePolicyRequest'

      responses:
        '201':
          $ref: '#/components/responses/PolicyResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    get:
      tags:
        - Policy Management
      summary: List policies
      description: List policies
      operationId: listPolicies
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          $ref: '#/components/responses/PolicyPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/policies/{policy_name}:
    get:
      tags:
        - Policy Management
      summary: Get a policy
      description: Get a policy
      operationId: getPolicy
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/policy_name'
      responses:
        '200':
          $ref: '#/components/responses/PolicyResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    patch:
      tags:
        - Policy Management
      summary: Update a policy
      description: Update a policy
      operationId: updatePolicy
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/policy_name'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePolicyRequest'
      responses:
        '200':
          $ref: '#/components/responses/PolicyResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      tags:
        - Policy Management
      summary: Delete a policy
      description: Delete a policy
      operationId: deletePolicy
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/policy_name'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/token:
    post:
      tags:
        - User Authorization
      summary: Generate a organization_id scoped token
      description: Generate a token for the given user credential scoped by the provided organization_id
      operationId: getTokenForOrg
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]

  /organizations/{organization_id}/sub_organizations/{sub_organization_name}/token:
    post:
      tags:
        - User Authorization
      summary: Generate a organization_id scoped token
      description: Generate a token for the given user credential scoped by the provided organization_id
      operationId: getTokenForSubOrg
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/sub_organization_name'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]


  /token:
    post:
      tags:
        - User Authorization
      summary: Generate a token
      description: Generate a token for the given user credential (same as /organizations/{organization_id}/token at the moment. Might change in future)
      operationId: getToken
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]

  /delegate_token:
    post:
      tags:
        - User Authorization
      summary: Generate a delegate token
      description: Generate a token with ad-hoc principal on behalf of an user with permissions to a policy to which the user has delegate rights.
      operationId: getDelegateToken
      requestBody:
        $ref: '#/components/requestBodies/GetDelegateTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]

  /authenticate:
    post:
      tags:
        - User Authentication
      summary: Authenticate a request
      description: >
        Authenticates the request and respond with token. Upon successful authentication,
        - For basic auth as well as credential based bearer auth, this API generates a token and returns it.
        - For JWT bearer auth, returns the same JWT token in response
      operationId: authenticate
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]

  /validate:
    post:
      tags:
        - User Authorization
      summary: Validate an auth request
      description: Validate if the caller has access to resource-action in the request
      operationId: validate
      requestBody:
        $ref: '#/components/requestBodies/ValidationRequest'
      responses:
        '200':
          $ref: '#/components/responses/ValidationResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /keys/{kid}:
    get:
      tags:
        - Key Management
      summary: Get keys
      description: Get public/private keys from Key-id in der/pem format
      operationId: getKey
      parameters:
        - $ref: '#/components/parameters/kid'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/type'
      responses:
        '200':
          $ref: '#/components/responses/KeyResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  #Invites
  /verifyEmail:
    post:
      tags:
        - User Verification
      summary: Verify email
      description: Verify email during account opening and resetting password
      operationId: verifyEmail
      requestBody:
        $ref: '#/components/requestBodies/VerifyEmailRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organization/{organization_id}/invites:
    get:
      tags:
        - User Verification
      summary: Get organization passcodes
      description: Get passcodes for the organization
      operationId: listInvites
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/PasscodePaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /organizations/{organization_id}/invites/resend:
    post:
      tags:
        - User Verification
      summary: Resend organization passcodes
      description: Resend passcodes for the organization
      operationId: resendInvite
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        $ref: '#/components/requestBodies/ResendInviteRequest'
      responses:
        '200':
          $ref: '#/components/responses/BaseSuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /auth_providers:
    get:
      tags:
        - Auth Providers
      summary: List auth providers
      description: List all available auth providers. This is a paginated api which returns the list of auth providers with a next page token.
      operationId: listAuthProviders
      parameters:
        - $ref: '#/components/parameters/next_token'
        - $ref: '#/components/parameters/page_size'
      responses:
        '200':
          $ref: '#/components/responses/AuthProviderPaginatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        '429':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "Bearer <credential>"
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    basicAuth:
      type: http
      scheme: basic

  parameters:
    user_name:
      in: path
      name: user_name
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 50
            pattern: ^[A-Za-z0-9_]{3,50}$
            example: Bob

    resource_name:
      in: path
      name: resource_name
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 50
            pattern: ^[A-Za-z0-9_]{3,50}$
            example: invoice

    action_name:
      in: path
      name: action_name
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 50
            pattern: ^[A-Za-z0-9_]{3,50}$
            example: view

    policy_name:
      in: path
      name: policy_name
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 50
            pattern: ^[A-Za-z0-9_]{3,50}$
            example: policy_viewer

    organization_id:
      in: path
      name: organization_id
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 10
            pattern: ^[A-Za-z0-9]{10}$
            example: "XlK5h64gND"

    sub_organization_name:
      in: path
      name: sub_organization_name
      required: true
      content:
        application/json:
          schema:
            type: string
            example: "customer_1"

    credential_id:
      in: path
      name: credential_id
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 50
            example: "1f44ada7-7196-4f2d-8380-4c76f8bddec2"

    kid:
      in: path
      name: kid
      required: true
      content:
        application/json:
          schema:
            type: string
            maxLength: 50
            example: "1f44ada7-7196-4f2d-8380-4c76f8bddec2"

    format:
      in: query
      name: format
      required: false
      schema:
        type: string
        enum:
          - der
          - pem
        default: pem
        example: "pem"

    type:
      in: query
      name: type
      required: false
      schema:
        type: string
        enum:
          - public
        default: public
        example: "public"

    next_token:
      in: query
      name: nextToken
      required: false
      schema:
        type: string
        example: "eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ=="

    page_size:
      in: query
      name: pageSize
      required: false
      schema:
        type: string
        example: "10"

    sort_order:
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        example: "asc"

  requestBodies:
    CreateOrganizationRequest:
      description: Payload to create organization
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrganizationRequest'
          examples:
            CreateOrganizationRequest:
              $ref: '#/components/examples/CreateOrganizationRequest'

    UpdateOrganizationRequest:
      description: Payload to update organization
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOrganizationRequest'
          examples:
            UpdateOrganizationRequest:
              $ref: '#/components/examples/UpdateOrganizationRequest'

    CreateSubOrganizationRequest:
      description: Payload to create sub organization
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSubOrganizationRequest'
          examples:
            CreateSubOrganizationRequest:
              $ref: '#/components/examples/CreateSubOrganizationRequest'

    UpdateSubOrganizationRequest:
      description: Payload to update sub organization
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSubOrganizationRequest'
          examples:
            UpdateSubOrganizationRequest:
              $ref: '#/components/examples/UpdateSubOrganizationRequest'

    CreateUserRequest:
      description: Payload to create user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserRequest'
          examples:
            CreateUserRequest:
              $ref: '#/components/examples/CreateUserRequest'


    UpdateUserRequest:
      description: Payload to update user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserRequest'
          examples:
            UpdateUserRequest:
              $ref: '#/components/examples/UpdateUserRequest'

    ChangeUserPasswordRequest:
      description: Payload to change user password
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeUserPasswordRequest'
          examples:
            ChangeUserPasswordRequest:
              $ref: '#/components/examples/ChangeUserPasswordRequest'

    CreateUserPasswordRequest:
      description: Payload to set user password
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserPasswordRequest'
          examples:
            CreateUserPasswordRequest:
              $ref: '#/components/examples/CreateUserPasswordRequest'

    ResetPasswordRequest:
      description: Payload to reset password
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPasswordRequest'
          examples:
            ResetPasswordRequest:
              $ref: '#/components/examples/ResetPasswordRequest'

    AddUserAuthMethodRequest:
      description: Payload to add user auth method
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddUserAuthMethodRequest'
          examples:
            AddUserAuthMethodRequest:
              $ref: '#/components/examples/AddUserAuthMethodRequest'

    CreateCredentialRequest:
      description: Payload to create credential
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCredentialRequest'
          examples:
            CreateCredentialRequest:
              $ref: '#/components/examples/CreateCredentialRequest'

    UpdateCredentialRequest:
      description: Payload to update credential
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCredentialRequest'
          examples:
            UpdateCredentialRequest:
              $ref: '#/components/examples/UpdateCredentialRequest'

    CreateResourceRequest:
      description: Payload to create resource
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateResourceRequest'
          examples:
            CreateResourceRequest:
              $ref: '#/components/examples/CreateResourceRequest'

    UpdateResourceRequest:
      description: Payload to update resource
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateResourceRequest'
          examples:
            UpdateResourceRequest:
              $ref: '#/components/examples/UpdateResourceRequest'

    CreateActionRequest:
      description: Payload to create action
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateActionRequest'
          examples:
            CreateActionRequest:
              $ref: '#/components/examples/CreateActionRequest'

    UpdateActionRequest:
      description: Payload to update action
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateActionRequest'
          examples:
            UpdateActionRequest:
              $ref: '#/components/examples/UpdateActionRequest'

    CreatePolicyRequest:
      description: Payload to create policy
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePolicyRequest'
          examples:
            CreatePolicyRequest:
              $ref: '#/components/examples/CreatePolicyRequest'

    CreatePolicyFromTemplateRequest:
      description: Payload to create policy from policy template
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePolicyFromTemplateRequest'
          examples:
            CreatePolicyRequest:
              $ref: '#/components/examples/CreatePolicyFromTemplateRequest'

    UpdatePolicyRequest:
      description: Payload to update policy
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePolicyRequest'
          examples:
            UpdatePolicyRequest:
              $ref: '#/components/examples/UpdatePolicyRequest'

    PolicyAssociationRequest:
      description: Payload to attach / detach a policy to a user / resource
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyAssociationRequest'
          examples:
            PolicyAssociationRequest:
              $ref: '#/components/examples/PolicyAssociationRequest'

    ValidationRequest:
      description: Payload to validate if a user has access to a resource-action
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationRequest'
          examples:
            ValidationRequest:
              $ref: '#/components/examples/ValidationRequest'

    VerifyEmailRequest:
      description: Payload to send verification link to email
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyEmailRequest'
          examples:
            VerifyEmailRequestReset:
              $ref: '#/components/examples/VerifyEmailRequestReset'
            VerifyEmailRequestInvite:
              $ref: '#/components/examples/VerifyEmailRequestInvite'
            VerifyEmailRequestSignup:
              $ref: '#/components/examples/VerifyEmailRequestSignup'
            VerifyEmailRequestSignupWithMetadata:
              $ref: '#/components/examples/VerifyEmailRequestSignupWithMetadata'

    ResendInviteRequest:
      description: Payload to resend invite
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResendInviteRequest'
          examples:
            ResendInviteRequest:
              $ref: '#/components/examples/ResendInviteRequest'

    GetDelegateTokenRequest:
      description: Payload to generate a delegate-able token
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDelegateTokenRequest'
          examples:
            GetDelegateTokenRequest:
              $ref: '#/components/examples/GetDelegateTokenRequest'

  responses:
    BaseSuccessResponse:
      description: OK
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseSuccessResponse'

    PasscodePaginatedResponse:
      description: Paginated response of passcodesm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PasscodePaginatedResponse'
          examples:
            PasscodePaginatedResponse:
              $ref: '#/components/examples/PasscodePaginatedResponse'

    ErrorResponse:
      description: Error response
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            ErrorResponse:
              summary: Error message
              value:
                message: "<Reason message>"

    CreateOrganizationResponse:
      description: Response for Create Organization request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrganizationResponse'
          examples:
            Organization:
              $ref: '#/components/examples/CreateOrganizationResponse'

    CreateSubOrganizationResponse:
      description: Response for Create Sub Organization request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSubOrganizationResponse'
          examples:
            Organization:
              $ref: '#/components/examples/CreateSubOrganizationResponse'

    OrganizationResponse:
      description: Response for Get and Update Organization requests
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
          examples:
            Organization:
              $ref: '#/components/examples/Organization'

    SubOrganizationResponse:
      description: Response for Get and Update Sub Organization requests
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubOrganization'
          examples:
            Organization:
              $ref: '#/components/examples/SubOrganization'

    ListSubOrganizationsResponse:
      description: Response for list sub organization under an organization request.
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubOrganizationsPaginatedResponse'
          examples:
            Organization:
              $ref: '#/components/examples/SubOrganizationsPaginatedResponse'

    CreateUserResponse:
      description: Response for CreateUserRequest
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
          examples:
            User:
              $ref: '#/components/examples/CreateUserResponse'

    UpdateUserResponse:
      description: Response for UpdateUserRequest
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            User:
              $ref: '#/components/examples/User'

    GetUserResponse:
      description: Response for GetUserRequest
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            User:
              $ref: '#/components/examples/User'

    CreateCredentialResponse:
      description: Response for CreateCredentialRequest
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credential'
          examples:
            Credential:
              $ref: '#/components/examples/Credential'

    GetCredentialResponse:
      description: Response for GetCredentialRequest
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CredentialWithoutSecret'
          examples:
            CredentialWithoutSecret:
              $ref: '#/components/examples/CredentialWithoutSecret'

    ListCredentialResponse:
      description: Response for list credential request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListCredentialResponse'
          examples:
            ListCredentialResponse:
              $ref: '#/components/examples/ListCredentialResponse'


    UpdateCredentialResponse:
      description: Response for UpdateCredentialRequest
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CredentialWithoutSecret'
          examples:
            CredentialWithoutSecret:
              $ref: '#/components/examples/CredentialWithoutSecret'

    ResourceResponse:
      description: Response for resource requests returning a resource entity
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'
          examples:
            Resource:
              $ref: '#/components/examples/Resource'

    ActionResponse:
      description: Response for action requests returning an action entity
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Action'
          examples:
            Action:
              $ref: '#/components/examples/Action'

    PolicyResponse:
      description: Response for policy requests returning an policy entity
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Policy'
          examples:
            Policy:
              $ref: '#/components/examples/Policy'

    TokenResponse:
      description: Response with token
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenResponse'
          examples:
            TokenResponse:
              $ref: '#/components/examples/TokenResponse'
        text/plain:
          schema:
            type: string
          example: XlK5h64gNDBfMXAPKKGRmWjaxmXJJzDKIJNWqSWj

    ValidationResponse:
      description: Response for validation request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationResponse'
          examples:
            ValidationResponse:
              $ref: '#/components/examples/ValidationResponse'

    UserPaginatedResponse:
      description: Response for list users request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPaginatedResponse'
          examples:
            UserPaginatedResponse:
              $ref: '#/components/examples/UserPaginatedResponse'

    UserAuthMethodsResponse:
      description: Response for list user auth methods request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAuthMethodsResponse'
          examples:
            UserAuthMethodsResponse:
              $ref: '#/components/examples/UserAuthMethodsResponse'

    PolicyPaginatedResponse:
      description: Response for list policies request and list policies for user request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyPaginatedResponse'
          examples:
            PolicyPaginatedResponse:
              $ref: '#/components/examples/PolicyPaginatedResponse'

    ResourcePaginatedResponse:
      description: Response for list resources request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourcePaginatedResponse'
          examples:
            ResourcePaginatedResponse:
              $ref: '#/components/examples/ResourcePaginatedResponse'

    ActionPaginatedResponse:
      description: Response for list actions request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionPaginatedResponse'
          examples:
            ActionPaginatedResponse:
              $ref: '#/components/examples/ActionPaginatedResponse'

    KeyResponse:
      description: Response for key request
      headers:
        X-Iam-User-Organization:
          schema:
            type: string
          description: Organization Id of the authenticated user
          example: XlK5h64gND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeyResponse'
          examples:
            KeyResponse:
              $ref: '#/components/examples/KeyResponse'

    AuthProviderPaginatedResponse:
      description: Response for list auth providers request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthProviderPaginatedResponse'
          examples:
            AuthProviderPaginatedResponse:
              $ref: '#/components/examples/AuthProviderPaginatedResponse'

  examples:
    # Request examples
    CreateOrganizationRequest:
      summary: A sample CreateOrganizationRequest
      value:
        name: ACME Enterprise
        description: Brief description about ACME
        rootUser:
          preferredUsername: username
          name: Lorem Ipsum
          password: <password>
          email: root@example.com
          phone: "+1234567890"

    UpdateOrganizationRequest:
      summary: A sample UpdateOrganizationRequest
      value:
        name: ACME Enterprise
        description: Updated Brief description about ACME

    CreateSubOrganizationRequest:
      summary: A sample CreateSubOrganizationRequest
      value:
        name: ACME Enterprise
        description: Brief description about ACME
        id: "Customer - 1"

    UpdateSubOrganizationRequest:
      summary: A sample UpdateSubOrganizationRequest
      value:
        name: ACME Enterprise

    CreateUserRequest:
      summary: A sample create user request
      value:
        name: Lorem Ipsum
        password: nii2du35bdtuethntv3q7416
        email: bob@acme.com
        phone: "+1234071628"
        status: enabled
        verified: true
        loginAccess: true

    UpdateUserRequest:
      summary: sample update user request
      value:
        name: Lorem Ipsum
        email: bob@acme.com
        phone: "+1234071634"
        status: enabled
        verified: true

    ChangeUserPasswordRequest:
      summary: sample change user password request
      value:
        oldPassword: Old@Password123
        newPassword: New@Password123

    CreateUserPasswordRequest:
      summary: sample set user password request
      value:
        password: Password@123

    ResetPasswordRequest:
      summary: sample reset password request
      value:
        email: bob@acme.com
        password: <new password>

    AddUserAuthMethodRequest:
      summary: sample add user auth methods request
      value:
        issuer: google
        token: <JWT token or Access token provided by the auth provider>

    CreateCredentialRequest:
      summary: sample create credential request
      value:
        validUntil: 2023-01-01T00:00:00
    UpdateCredentialRequest:
      summary: sample update credential request
      value:
        validUntil: 2023-01-03T00:00:00
        status: active
    CreateResourceRequest:
      summary: sample create resource request
      value:
        name: invoice
        description: customer invoice
    UpdateResourceRequest:
      summary: sample update resource request
      value:
        description: new descripation
    CreateActionRequest:
      summary: sample create action request
      value:
        name: view
        description: View invoice action
    UpdateActionRequest:
      summary: update action request
      value:
        description: updated description
    CreatePolicyRequest:
      summary: sample create policy request
      value:
        name: policy_view_invoice
        description: Allow viewing all invoices except 1
        statements:
          - resource: hrn:XlK5h64gND::invoice/1
            action: hrn:XlK5h64gND::invoice$view
            effect: deny
          - resource: hrn:XlK5h64gND::invoice/*
            action: hrn:XlK5h64gND::invoice$view
            effect: allow

    CreatePolicyFromTemplateRequest:
      summary: sample create policy from template request
      value:
        name: Product-Manager-Policy
        templateName: product-manager
        templateVariables:
          subOrganizationId: sub-org
          accountId: acc.svbk324.sac3245


    UpdatePolicyRequest:
      summary: sample update policy request
      description: Allow viewing all invoices except 1
      value:
        statements:
          - resource: hrn:XlK5h64gND::invoice/1
            action: hrn:XlK5h64gND::invoice$view
            effect: deny
          - resource: hrn:XlK5h64gND::invoice/*
            action: hrn:XlK5h64gND::invoice$view
            effect: allow
    PolicyAssociationRequest:
      summary: sample policy association request
      value:
        policies:
          - hrn:XlK5h64gND::iam-policy/policy_view_invoice
    ValidationRequest:
      summary: sample validation request
      value:
        validations:
          - resource: hrn:XlK5h64gND::invoice/1
            action: hrn:XlK5h64gND::invoice$view
          - resource: hrn:XlK5h64gND::invoice/2
            action: hrn:XlK5h64gND::invoice$view

    VerifyEmailRequestReset:
      value:
        email: abcd@abcd.in
        organizationId: XlK5h64gND
        purpose: reset

    VerifyEmailRequestInvite:
      value:
        email: abcd@abcd.in
        organizationId: XlK5h64gND
        purpose: invite
        metadata:
          inviterUserHrn: hrn:XlK5h64gND::iam-user/bob
          policies:
            - hrn:XlK5h64gND::iam-policy/admin

    VerifyEmailRequestSignup:
      value:
        email: abcd@abcd.in
        purpose: signup

    VerifyEmailRequestSignupWithMetadata:
      value:
        email: abcd@abcd.in
        purpose: signup
        metadata:
          name: ACME Enterprise
          description: Brief description about ACME
          rootUserPassword: Password@123
          rootUserName: Lorem Ipsum
          rootUserPreferredUsername: username
          rootUserPhone: "+1234567890"

    ResendInviteRequest:
      value:
        email: "email@email.com"

    GetDelegateTokenRequest:
      value:
        principal: hrn:XlK5h64gND::iam-user/Bob
        expiry: 3600
        policy: hrn:XlK5h64gND::iam-policy/dataReadOnly


    # Response examples

    PasscodePaginatedResponse:
      value:
        data:
          - email: abcd@abcd.com
            purpose: invite
            createdAt: 2021-01-01T00:00:00
            validUntil: 2021-01-01T00:00:00
        nextToken: dshfoadshfjshadkfjkdsal

    CreateOrganizationResponse:
      value:
        organization:
          id: XlK5h64gND
          name: ACME Enterprise
          description: Brief description about ACME
          rootUser:
            hrn: hrn:XlK5h64gND::iam-user/Bob
            username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
            name: Lorem Ipsum
            organizationId: XlK5h64gND
            email: bob@acme.com
            status: enabled
            verified: true
            phone: "+1234071628"
            loginAccess: true
            createdAt: 2020-01-01T00:00:00.000Z
            createdBy: ''
          updatedAt: 2020-01-01T00:00:00.000Z
          createdAt: 2020-01-01T00:00:00.000Z
        rootUserToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

    CreateSubOrganizationResponse:
      value:
        subOrganization:
          id: hrn:XlK5h64gND:cus_123
          name: ACME Enterprise - Customer 123
          description: Brief description about ACME
          updatedAt: 2020-01-01T00:00:00.000Z
          createdAt: 2020-01-01T00:00:00.000Z

    SubOrganizationsPaginatedResponse:
      value:
        data:
          - id: XlK5h64gND
            name: ACME sub Organization
            createdAt: 2020-01-01T00:00:00.000Z
            updatedAt: 2020-01-01T00:00:00.000Z
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc

    TokenResponse:
      value:
        token: XlK5h64gNDBfMXAPKKGRmWjaxmXJJzDKIJNWqSWj

    ValidationResponse:
      value:
        results:
          - resource: "hrn:XlK5h64gND::invoice/1"
            action: "hrn:XlK5h64gND::invoice$view"
            effect: "allow"
          - resource: "hrn:XlK5h64gND::invoice/2"
            action: "hrn:XlK5h64gND::invoice$view"
            effect: "deny"

    ListCredentialResponse:
      value:
        credentials:
          - id: 1f44ada7-7196-4f2d-8380-4c76f8bddec2
            validUntil: 2023-01-01T00:00:00
            status: active
            createdAt: 2020-01-01T00:00:00
            updatedAt: 2020-01-01T00:00:00

    UserPaginatedResponse:
      value:
        data:
          - hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
            username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
            name: Lorem Ipsum
            organizationId: XlK5h64gND
            email: bob@acme.com
            status: enabled
            verified: true
            phone: "+1234071628"
            loginAccess: true
            createdBy: hrn:Xghfdksd::iam-user/johnny314
            createdAt: 2020-01-01T00:00:00.000Z
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc

    UserAuthMethodsResponse:
      value:
          data:
            - providerName: google
            - providerName: iam

    PolicyPaginatedResponse:
      value:
        data:
          - name: policy_viewer
            organizationId: XlK5h64gND
            hrn: hrn:XlK5h64gND::iam-policy/policy_viewer
            version: 1
            statements:
              - resource: hrn:XlK5h64gND::invoice/1
                action: hrn:XlK5h64gND::invoice$view
                effect: allow
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc

    ResourcePaginatedResponse:
      value:
        data:
          - name: invoice
            organizationId: XlK5h64gND
            hrn: hrn:XlK5h64gND::invoice
            description: customer invoice
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc

    ActionPaginatedResponse:
      value:
        data:
          - organizationId: XlK5h64gND
            resourceName: invoice
            name: view
            hrn: hrn:XlK5h64gND::invoice$view
            description: View invoice action
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc

    KeyResponse:
      value:
        kid: 1f44ada7-7196-4f2d-8380-4c76f8bddec2
        status: SIGNING
        format: der
        key: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKv36cup5G6xfHOtllBjsymgQ6CHQUxCRieycapq8UZL3oCpbatU7lg8Tv+eGAhFsF/JYoDWcHOhAHhMm8Ae+lA==

    AuthProviderPaginatedResponse:
      value:
        data:
          - providerName: Google
            authUrl: https://accounts.google.com/o/oauth2/v2/auth
            clientId: 47561438579695-akjfgtakgau678362awrhfaur763.apps.googleusercontent.com
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc

    # Entity examples
    Organization:
      summary: A sample Organization
      value:
        id: XlK5h64gND
        name: ACME Enterprise
        description: Brief description about ACME
        rootUser:
          hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
          username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
          name: Lorem Ipsum
          organizationId: XlK5h64gND
          email: bob@acme.com
          status: enabled
          phone: "+1234071628"
          loginAccess: true
          verified: true
          createdBy: ""
          createdAt: 2020-01-01T00:00:00.000Z
        rootUserHrn: "hrn:XlK5h64gND::iam-user/root-user-name"
        createdAt: 2020-01-01T00:00:00.000Z
        updatedAt: 2020-01-01T00:00:00.000Z

    SubOrganization:
      summary: A sample SubOrganization
      value:
        id: XlK5h64gND
        name: ACME Enterprise
        createdAt: 2020-01-01T00:00:00.000Z
        updatedAt: 2020-01-01T00:00:00.000Z

    CreateUserResponse:
      value:
        user:
          hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
          username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
          name: Lorem Ipsum
          organizationId: XlK5h64gND
          email: bob@acme.com
          status: enabled
          verified: true
          phone: "+1234071628"
          loginAccess: true
          createdBy: hrn:Xghfdksd::iam-user/johnny314
          createdAt: 2020-01-01T00:00:00Z
        userToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

    User:
      summary: A sample user
      value:
        hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
        username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2
        name: Lorem Ipsum
        organizationId: XlK5h64gND
        email: bob@acme.com
        status: enabled
        verified: true
        phone: "+1234071628"
        loginAccess: true
        createdBy: hrn:Xghfdksd::iam-user/johnny314
        createdAt: 2020-01-01T00:00:00Z

    Credential:
      summary: A sample credential
      value:
        id: 1f44ada7-7196-4f2d-8380-4c76f8bddec2
        validUntil: 2023-01-01T00:00:00
        status: active
        secret: Z2QGNPmgWUBfRXhCrAmArrrszMajaEbYgaQJMciL
        createdAt: 2020-01-01T00:00:00
        updatedAt: 2020-01-01T00:00:00

    CredentialWithoutSecret:
      summary: A sample credential without secret
      value:
        id: 1f44ada7-7196-4f2d-8380-4c76f8bddec2
        validUntil: 2023-01-01T00:00:00
        status: active
        createdAt: 2020-01-01T00:00:00
        updatedAt: 2020-01-01T00:00:00

    Resource:
      summary: A sample resource
      value:
        name: invoice
        organizationId: XlK5h64gND
        hrn: hrn:XlK5h64gND::invoice
        description: customer invoice

    Action:
      summary: A sample action
      value:
        organizationId: XlK5h64gND
        resourceName: invoice
        name: view
        hrn: hrn:XlK5h64gND::invoice$view
        description: View invoice action

    Policy:
      summary: A sample policy
      value:
        name: policy_viewer
        description: Allow viewing invoices
        organizationId: XlK5h64gND
        hrn: hrn:XlK5h64gND::iam-policy/policy_viewer
        version: 1
        statements:
          - resource: hrn:XlK5h64gND::invoice/1
            action: hrn:XlK5h64gND::invoice$view
            effect: deny
          - resource: hrn:XlK5h64gND::invoice/*
            action: hrn:XlK5h64gND::invoice$view
            effect: allow

  schemas:
    # Requests
    CreateOrganizationRequest:
      description: Payload to create organization
      type: object
      additionalProperties: false
      required:
        - name
        - rootUser
      properties:
        name:
          type: string
          maxLength: 50
          pattern: ^[_a-zA-Z0-9-\s]{3,50}$
        description:
          type: string
          maxLength: 500
        rootUser:
          $ref: '#/components/schemas/RootUser'

    UpdateOrganizationRequest:
      description: Payload to update organization
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 50
          pattern: ^[_a-zA-Z0-9-\s]{3,50}$
        description:
          type: string
          maxLength: 500

    RootUser:
      type: object
      description: Root user details for the organization
      additionalProperties: false
      required:
        - password
        - email
      properties:
        preferredUsername:
          type: string
          maxLength: 50
          pattern: ^[A-Za-z0-9]{3,50}$
        name:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 100
        email:
          type: string
          maxLength: 100
          pattern: ^\S+@\S+\.\S+$
        phone:
          type: string
          maxLength: 30

    CreateSubOrganizationRequest:
      description: Payload to create sub organization
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the sub organization
        description:
          type: string
          maxLength: 500

    UpdateSubOrganizationRequest:
      description: Payload to update sub organization
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          description: Description of the sub organization

    CreateUserRequest:
      description: Payload to create ledger account
      type: object
      additionalProperties: false
      required:
        - name
        - status
      properties:
        preferredUsername:
          type: string
          maxLength: 50
          pattern: ^[A-Za-z0-9]{3,50}$
        name:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 100
        email:
          type: string
          maxLength: 100
          pattern: ^\S+@\S+\.\S+$
        phone:
          type: string
          maxLength: 30
        status:
          type: string
          enum:
            - enabled
            - disabled
        verified:
          type: boolean
        loginAccess:
          type: boolean
          default: false

    UpdateUserRequest:
      description: Payload to create ledger account
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 50
        email:
          type: string
          maxLength: 50
        phone:
          type: string
          maxLength: 30
        status:
          type: string
          enum:
            - enabled
            - disabled
        verified:
          type: boolean

    ChangeUserPasswordRequest:
      description: Payload to change user password
      type: object
      additionalProperties: false
      required:
        - oldPassword
        - newPassword
      properties:
        oldPassword:
          type: string
          maxLength: 100
        newPassword:
          type: string
          maxLength: 100

    CreateUserPasswordRequest:
      description: Payload to set user password
      type: object
      additionalProperties: false
      required:
        - password
      properties:
        password:
          type: string
          maxLength: 100

    ResetPasswordRequest:
      description: Payload to reset password
      type: object
      additionalProperties: false
      required:
        - email
        - password
      properties:
        email:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 50

    AddUserAuthMethodRequest:
      description: Payload to add user auth methods
      type: object
      additionalProperties: false
      properties:
        issuer:
          type: string
        token:
          type: string

    CreateCredentialRequest:
      description: Payload to create credential
      type: object
      additionalProperties: false
      properties:
        validUntil: # Default: No validity
          type: string
          format: timestamp
          maxLength: 20

    UpdateCredentialRequest:
      description: Payload to update credential
      type: object
      additionalProperties: false
      properties:
        validUntil: # No validity if null
          type: string
          format: timestamp
          maxLength: 20
        status:
          type: string
          enum:
            - active
            - inactive

    CreateResourceRequest:
      description: Payload to create resource
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 500

    UpdateResourceRequest:
      description: Payload to update resource
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          maxLength: 500

    CreateActionRequest:
      description: Payload to create action
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 500
    UpdateActionRequest:
      description: Payload to update action
      type: object
      additionalProperties: false
      required:
        - description
      properties:
        description:
          type: string
          maxLength: 500

    CreatePolicyRequest:
      description: Payload to create policy
      type: object
      additionalProperties: false
      required:
        - name
        - statements
      properties:
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 512
        statements:
          maxItems: 20
          items:
            $ref: '#/components/schemas/PolicyStatement'

    CreatePolicyFromTemplateRequest:
      description: Payload to create policy from template
      type: object
      additionalProperties: false
      required:
        - name
        - templateName
      properties:
        name:
          type: string
          maxLength: 50
        templateName:
          type: string
          maxLength: 512
        templateVariables:
          type: object
          additionalProperties:
            type: string

    UpdatePolicyRequest:
      description: Payload to update policy
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          maxLength: 512
        statements:
          maxItems: 20
          items:
            $ref: '#/components/schemas/PolicyStatement'

    PolicyAssociationRequest:
      description: Payload to attach / detach a policy to a user / resource
      type: object
      additionalProperties: false
      required:
        - policies
      properties:
        policies:
          type: array
          maxItems: 50
          items:
            type: string
            maxLength: 50

    ValidationRequest:
      description: Payload to validate if a user has access to a resource-action
      type: object
      additionalProperties: false
      required:
        - validations
      properties:
        validations:
          type: array
          maxItems: 50
          items:
            $ref: "#/components/schemas/ResourceAction"

    VerifyEmailRequest:
      description: Payload to send verification link to email
      type: object
      additionalProperties: false
      required:
        - purpose
      properties:
        email:
          type: string
        userHrn:
          type: string
        organizationId:
          type: string
        subOrganizationName:
          type: string
        purpose:
          type: string
          enum:
            - reset
            - signup
            - invite
        metadata:
          type: object
          description: |
            Additional metadata to be sent along with the request. Every purpose requires different metadata.
            - signup :
                if user provides admin user and org details in metadata, they don't need to be provided in the request body during CreateOrganization request.
                Supported metadata keys:
                1. name : string (required): name of the organization
                2. description : string (optional) - description of the organization
                3. rootUserPassword : string (required) - password of the root user
                4. rootUserName : string (optional) - name of the root user
                5. rootUserPreferredUsername : string (optional) - preferred username of the root user
                6. rootUserPhone : string (optional) - phone number of the root user
            - invite:
                1. inviterUserHrn : string (required) - hrn of the user who is inviting the new user
                2. policies: array<string> (required) - policies to be attached to the new user
          additionalProperties: true

    ResendInviteRequest:
      description: Payload to resend invite
      type: object
      additionalProperties: false
      required:
        - email
      properties:
        email:
          type: string

    GetDelegateTokenRequest:
      description: payload to generate a delegate_token
      type: object
      additionalProperties: false
      required:
        - policy
      properties:
        principal:
          description: Principal to delegate the token to. Will default to the requestor if not provided
          type: string
        expiry:
          description: |
              Expiry in seconds from the time of generation. 
              If not provided, generated token will have the expiry of the token used for requesting.
              If a credential is used for requesting, expiry will be 24 hours from the time of requesting.
          type: integer
          format: int64
        policy:
          description: |
            Policy with which to generate the delegate token.
            Can be just the name of the policy if it is in the requestors organization or a complete policy resourceHrn
          type: string


    # Responses:
    BaseSuccessResponse:
      type: object
      additionalProperties: false
      required:
        - success
      properties:
        success:
          type: boolean
          example: true

    ErrorResponse:
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        message:
          type: string
          description: error description
          maxLength: 500

    TokenResponse:
      type: object
      additionalProperties: false
      required:
        - token
      properties:
        token:
          type: string

    ValidationResponse:
      description: Payload to validate if a user has access to a resource-action
      type: object
      additionalProperties: false
      required:
        - results
      properties:
        results:
          type: array
          maxItems: 50
          items:
            $ref: "#/components/schemas/ResourceActionEffect"

    CreateOrganizationResponse:
      type: object
      additionalProperties: false
      required:
        - organization
        - rootUserToken
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
        rootUserToken:
          description: JWT token of the root user
          type: string

    CreateSubOrganizationResponse:
      type: object
      additionalProperties: false
      required:
        - subOrganization
      properties:
        subOrganization:
          $ref: "#/components/schemas/SubOrganization"

    SubOrganizationsPaginatedResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/SubOrganization'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    ListCredentialResponse:
      type: object
      additionalProperties: false
      required:
        - credentials
      properties:
        credentials:
          type: array
          maxItems: 50
          items:
            $ref: "#/components/schemas/CredentialWithoutSecret"

    UserPaginatedResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/User'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    UserAuthMethodsResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/UserAuthMethod'

    PolicyPaginatedResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/Policy'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    ResourcePaginatedResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/Resource'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    ActionPaginatedResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/Action'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    KeyResponse:
      type: object
      additionalProperties: false
      required:
        - kid
        - status
        - format
        - key
      properties:
        kid:
          type: string
        status:
          type: string
          description: "The status of the key. Valid values are SIGNING, VERIFYING and EXPIRED"
        format:
          type: string
          enum:
            - der
            - pem
        key:
          type: string

    AuthProviderPaginatedResponse:
      description: Paginated response for list of auth providers
      type: object
      additionalProperties: false
      properties:
        data:
          description: List of auth providers
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/AuthProvider'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    # Entities:
    Organization:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - rootUser
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 500
        rootUser:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    SubOrganization:
      type: object
      description: Sub organization details
      additionalProperties: false
      required:
        - name
        - id
        - organizationId
        - createdAt
        - updatedAt
      properties:
        name:
          type: string
          description: Sub organization name
        id:
          type: string
          description: Sub organization id in HRN format
        organizationId:
          type: string
          description: Organization id where this sub organization belongs to
        description:
          type: string
          description: Any description related to sub organization
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    User:
      type: object
      additionalProperties: false
      required:
        - hrn
        - username
        - name
        - organizationId
        - status
        - verified
        - createdAt
        - loginAccess
      properties:
        hrn:
          type: string
        username:
          type: string
          maxLength: 50
        preferredUsername:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 50
        organizationId:
          type: string
          maxLength: 50
        email:
          type: string
          maxLength: 50
        status:
          type: string
          enum:
            - enabled
            - disabled
        phone:
          type: string
          maxLength: 20
        loginAccess:
          type: boolean
        createdBy:
          type: string
          maxLength: 50
        createdAt:
          type: string
          format: date-time
        verified:
          type: boolean

    UserAuthMethod:
      description: User auth method details
      type: object
      additionalProperties: false
      required:
          - providerName
      properties:
          providerName:
            description: Name of the authorization method
            type: string
            maxLength: 50

    CreateUserResponse:
      type: object
      additionalProperties: false
      required:
        - user
        - userToken
      properties:
        user:
          $ref: '#/components/schemas/User'
        userToken:
          description: JWT token of the user
          type: string

    Credential:
      type: object
      additionalProperties: false
      required:
        - id
        - status
        - secret
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          maxLength: 50
        validUntil:
          type: string
          format: timestamp
          maxLength: 20
        status:
          type: string
          enum:
            - active
            - inactive
        secret:
          type: string
          maxLength: 50
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CredentialWithoutSecret:
      type: object
      additionalProperties: false
      required:
        - id
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          maxLength: 50
        validUntil:
          type: string
          format: timestamp
          maxLength: 20
        status:
          type: string
          enum:
            - active
            - inactive
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Resource:
      type: object
      additionalProperties: false
      required:
        - name
        - organizationId
        - hrn
      properties:
        name:
          type: string
          maxLength: 50
        organizationId:
          type: string
          maxLength: 50
        hrn:
          type: string
        description:
          type: string
          maxLength: 500

    Action:
      type: object
      additionalProperties: false
      required:
        - organizationId
        - resourceName
        - name
        - hrn
      properties:
        organizationId:
          type: string
          maxLength: 50
        resourceName:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 50
        hrn:
          type: string
        description:
          type: string
          maxLength: 500

    # UserPolicy is unreferenced in spec but used in app
    UserPolicy:
      type: object
      additionalProperties: false
      required:
        - organizationId
        - name
      properties:
        name:
          type: string
          maxLength: 50
        organizationId:
          type: string
          maxLength: 50

    Policy:
      type: object
      additionalProperties: false
      required:
        - organizationId
        - hrn
        - name
        - version
        - statements
      properties:
        name:
          type: string
          maxLength: 50
        organizationId:
          type: string
          maxLength: 50
        hrn:
          type: string
        description:
          type: string
          maxLength: 512
        version:
          type: integer
          maximum: 999
        statements:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/PolicyStatement'

    PolicyStatement:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
        - effect
      properties:
        resource:
          type: string
          maxLength: 50
        action:
          type: string
          maxLength: 50
        effect:
          type: string
          enum:
            - allow
            - deny

    Passcode:
      type: object
      additionalProperties: false
      required:
        - email
        - purpose
        - createdAt
        - validUntil
      properties:
        email:
          type: string
        purpose:
          type: string
        createdAt:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
    
    PasscodePaginatedResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/Passcode'
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'

    AuthProvider:
      description: Authorization provider details for user to login
      type: object
      additionalProperties: false
      required:
        - providerName
        - authUrl
        - clientId
      properties:
        providerName:
          description: Name of the authorization provider
          type: string
        authUrl:
          description: Authorization url of the provider
          type: string
        clientId:
          description: Client Id generated by the provider
          type: string

    # Others
    ResourceAction:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
      properties:
        resource:
          type: string
        action:
          type: string

    ResourceActionEffect:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
        - effect
      properties:
        resource:
          type: string
        action:
          type: string
        effect:
          type: string
          enum:
            - allow
            - deny

    PaginationOptions:
      type: object
      additionalProperties: false
      properties:
        pageSize:
          type: integer
        sortOrder:
          type: string
          enum:
            - asc
            - desc

externalDocs:
  description: Find out more about IAM
  url: https://github.com/hwslabs/iam/
