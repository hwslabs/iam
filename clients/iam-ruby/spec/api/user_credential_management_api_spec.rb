=begin
#Hypto IAM

#APIs for Hypto IAM Service.

The version of the OpenAPI document: 1.0.0
Contact: engineering@hypto.in
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IamRuby::UserCredentialManagementApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserCredentialManagementApi' do
  before do
    # run before each test
    @api_instance = IamRuby::UserCredentialManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserCredentialManagementApi' do
    it 'should create an instance of UserCredentialManagementApi' do
      expect(@api_instance).to be_instance_of(IamRuby::UserCredentialManagementApi)
    end
  end

  # unit tests for create_credential
  # Create a new credential for a user
  # Create a new credential for a user. This API returns the credential&#39;s secret key, which will be available only in the response of this API.
  # @param user_name 
  # @param organization_id 
  # @param create_credential_request Payload to create credential
  # @param [Hash] opts the optional parameters
  # @return [Credential]
  describe 'create_credential test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_credential
  # Delete a credential
  # Delete a credential associated with the user
  # @param organization_id 
  # @param user_name 
  # @param credential_id 
  # @param [Hash] opts the optional parameters
  # @return [BaseSuccessResponse]
  describe 'delete_credential test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credential
  # Gets credential for the user
  # Gets credential for the user, given the credential id
  # @param organization_id 
  # @param user_name 
  # @param credential_id 
  # @param [Hash] opts the optional parameters
  # @return [CredentialWithoutSecret]
  describe 'get_credential test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_credential
  # Update the status of credential
  # Update the status of credential to ACTIVE/INACTIVE. Credentials which are marked INACTIVE cannot be used to fetch short-term tokens.
  # @param organization_id 
  # @param user_name 
  # @param credential_id 
  # @param update_credential_request Payload to update credential
  # @param [Hash] opts the optional parameters
  # @return [CredentialWithoutSecret]
  describe 'update_credential test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
