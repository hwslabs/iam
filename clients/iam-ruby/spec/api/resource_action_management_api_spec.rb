=begin
#Hypto IAM

#APIs for Hypto IAM Service.

The version of the OpenAPI document: 1.0.0
Contact: engineering@hypto.in
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IamRuby::ResourceActionManagementApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ResourceActionManagementApi' do
  before do
    # run before each test
    @api_instance = IamRuby::ResourceActionManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourceActionManagementApi' do
    it 'should create an instance of ResourceActionManagementApi' do
      expect(@api_instance).to be_instance_of(IamRuby::ResourceActionManagementApi)
    end
  end

  # unit tests for create_action
  # Create an action
  # Create an action
  # @param organization_id 
  # @param resource_name 
  # @param create_action_request Payload to create action
  # @param [Hash] opts the optional parameters
  # @return [Action]
  describe 'create_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_action
  # Delete an action
  # Delete an action
  # @param organization_id 
  # @param resource_name 
  # @param action_name 
  # @param [Hash] opts the optional parameters
  # @return [BaseSuccessResponse]
  describe 'delete_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_action
  # Get an action
  # Get an action
  # @param organization_id 
  # @param resource_name 
  # @param action_name 
  # @param [Hash] opts the optional parameters
  # @return [Action]
  describe 'get_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_actions
  # List actions
  # List actions
  # @param organization_id 
  # @param resource_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_token 
  # @option opts [String] :page_size 
  # @option opts [String] :sort_order 
  # @return [ActionPaginatedResponse]
  describe 'list_actions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_action
  # Update an action
  # Update an action
  # @param organization_id 
  # @param resource_name 
  # @param action_name 
  # @param update_action_request Payload to update action
  # @param [Hash] opts the optional parameters
  # @return [Action]
  describe 'update_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
