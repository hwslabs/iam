=begin
#Hypto IAM

#APIs for Hypto IAM Service.

The version of the OpenAPI document: 1.0.0
Contact: engineering@hypto.in
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IamRuby::OrganizationManagementApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrganizationManagementApi' do
  before do
    # run before each test
    @api_instance = IamRuby::OrganizationManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganizationManagementApi' do
    it 'should create an instance of OrganizationManagementApi' do
      expect(@api_instance).to be_instance_of(IamRuby::OrganizationManagementApi)
    end
  end

  # unit tests for create_organization
  # Creates an organization.
  # Organization is the top level entity. All resources (like user, actions, policies) are created and managed under an organization. This is a privileged api and only internal applications has access to create an Organization.
  # @param create_organization_request Payload to create organization
  # @param [Hash] opts the optional parameters
  # @return [CreateOrganizationResponse]
  describe 'create_organization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_organization
  # Delete an organization
  # Delete an organization. This is a privileged api and only internal application will have access to delete organization.
  # @param organization_id 
  # @param [Hash] opts the optional parameters
  # @return [BaseSuccessResponse]
  describe 'delete_organization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organization
  # Get an organization
  # Get an organization and the metadata for the given organization.
  # @param organization_id 
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'get_organization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_organization
  # Update an organization
  # Update an organization
  # @param organization_id 
  # @param update_organization_request Payload to update organization
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'update_organization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
